name: Maven Package

on:
  workflow_dispatch:
    inputs:
      doRelease:
        description: Create a Maven Release
        required: true
        default: false
        type: boolean
      releaseVersion:
        description: Version to release
        required: false
        type: string
      developmentVersion:
        description: Next snapshot version
        required: false
        type: string
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: docker.io
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Maven Build
        run: mvn clean package

      - name: Configure git
        if: ${{ github.event.inputs.doRelease }}
        run: |
          git config --global committer.email "noreply@github.com"
          git config --global committer.name "GitHub"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"

      - name: Maven Prepare Release
        if: ${{ github.event.inputs.doRelease }}
        run: mvn --batch-mode release:prepare -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }}

      - name: Maven Perform Release
        if: ${{ github.event.inputs.doRelease }}
        run: mvn --batch-mode release:perform

      - name: GHCR - Login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_ACCESS_TOKEN }}

      - name: GHCR - Extract metadata
        id: meta-ghcr
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.GHCR_REGISTRY}}/${{ env.IMAGE_NAME }}

      - name: GHCR - Build / Push
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-ghcr.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO }}:latest
          cache-to: type=inline

      - name: DOCKER - Login
        if: ${{ github.event.inputs.doRelease }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: DOCKER - Extract metadata
        id: meta-docker
        if: ${{ github.event.inputs.doRelease }}
        uses: docker/metadata-action@v3
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: DOCKER - Build / Push
        if: ${{ github.event.inputs.doRelease }}
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-docker.outputs.tags }}
          labels: ${{ steps.meta-docker.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO }}:latest
          cache-to: type=inline

      - name: Maven Rollback Release
        if: ${{ github.event.inputs.doRelease}} && ${{ failure() }}
        run: mvn -B release:rollback
